@page "/note-detail/{id:int}"
@inject NoteApp.Logic.Domain.Entity.Note.Service.Interface.INoteService NS
@inject NavigationManager NavigationManager
@using System.ComponentModel.DataAnnotations
@using System.Data
@using System.Net.Http.Json
@using NoteApp.Logic.Domain.Entity.Note.Models
@rendermode InteractiveServer


<PageTitle>Details</PageTitle>

@* What do i put to call the onSubmit*@
@if (_newNote is not null)
{
    <div>


        <h2 class="fw-bold text-bg-dark text-capitalize text-center py-3">
            @_newNote.Title
        </h2>
        
        <div class="text-opacity-70 fst-italic mb-5">
            <p>Created at: @_newNote.Created</p>
            <p>Last Updated at: @_newNote.Modified</p>
        </div>
        
        <p class="fw-light text-opacity-75">
            @_newNote.Content
        </p>

    </div>
}
else
{
    <p>Loading...</p>
}

    
    
    @if (!string.IsNullOrWhiteSpace(_message))
{
    <div class="mt-3"> @_message</div>
}
@code{

    private UpdatedNoteDTO _newNote = new ();
    private NoteEntity _preData = new NoteEntity();
    private string? _message;

    // [Parameter]
    [Parameter] public int Id { get; set; }
    
    protected override async Task OnInitializedAsync()
    {

        if (await NS.GetByIdAsync(Id) != null)
        {
            _preData = await NS.GetByIdAsync(Id);
            
            _newNote.Title = _preData.Title;
            _newNote.Content = _preData.Content;
            _newNote.Created = _preData.Created;
            _newNote.Id = _preData.Id;
        }
        else
        {
            _message = $"Note for Id({Id} was not found)";
        }
        
    }

    public class UpdatedNoteDTO
    {
        public int Id { get; set; }
        [Required, MinLength(3)]
        public string Title { get; set; } = string.Empty;

        public string Content { get; set; } = string.Empty;
        
        public DateTime Created { get; set; } = DateTime.Now;

        public DateTime Modified { get; set; } = DateTime.Now;

    }
    

}
